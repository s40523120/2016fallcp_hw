<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>2016Fall 計算機程式課程網誌 (虎尾科大MDE)</title><link href="./" rel="alternate"></link><link href="./feeds/all.atom.xml" rel="self"></link><id>./</id><updated>2017-01-15T17:30:00+08:00</updated><entry><title>期末心得篇(有關於git的Clone與push)</title><link href="./qi-mo-xin-de-pian-you-guan-yu-gitde-cloneyu-push.html" rel="alternate"></link><published>2017-01-15T17:30:00+08:00</published><updated>2017-01-15T17:30:00+08:00</updated><author><name>hou</name></author><id>tag:,2017-01-15:./qi-mo-xin-de-pian-you-guan-yu-gitde-cloneyu-push.html</id><summary type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;h1&gt;前言:&lt;/h1&gt;
&lt;p&gt;課程中嚴老師所教w8以後的建立畫布阿、畫線、for迴圈、讓線條轉動、button 數字遊戲之類的。有些能懂有些不懂。叫我自己在創一個md檔然後自己打出程式是無法辦到，只能Ctrl c Ctrl v老師的或同學的，因為我英文爛、學的不夠多。對(我的問題)&lt;/p&gt;
&lt;h1&gt;但至少我對於克隆提交推送是蠻熟悉的大部分都能成功&lt;/h1&gt;
&lt;h1&gt;正文:&lt;/h1&gt;
&lt;p&gt;

&lt;h1&gt;如何流暢的推送?&lt;/h1&gt;
&lt;h1&gt;需要用到的指令如下:&lt;/h1&gt;
&lt;p&gt;0.cd xx(進入xx這資料中=要clone存放的位置)  md xxx(md=mkdir 建立資料夾xxx)&lt;/p&gt;
&lt;p&gt;1.git clone ..下載github文件&lt;/p&gt;
&lt;p&gt;2.git branch ..檢查分支&lt;/p&gt;
&lt;p&gt;4.git checkout gh-pages ..選擇(gh-pages)這個分支前提是要有這個分之名稱&lt;/p&gt;
&lt;p&gt;5.git status ..確認內容狀況(添加..刪除..之類的~)&lt;/p&gt;
&lt;p&gt;6.git config --global user.name ..使用者名稱&lt;/p&gt;
&lt;p&gt;7.git config --global user.email ..使用者E-mail&lt;/p&gt;
&lt;p&gt;8.git add -A ..添加所有(all[-A])&lt;/p&gt;
&lt;p&gt;9.git commit -m "XXXXX" ..設定要推回的資料一個名稱 "XXXXX"&lt;/p&gt;
&lt;p&gt;10.git push origin ..推回網頁(origin表示原網頁)&lt;/p&gt;
&lt;p&gt;11.當版本上傳後 github pages 無法正確更新(顯示紅色X), 試著 git rm -f -r plugin/liquid_tags/test_data 後再次重git add 動作往下提交推送.
&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;
#第一步驟
選擇要存放的位置&lt;br&gt;
#cd xxx
&lt;/p&gt;

&lt;p&gt;
選擇github 一個分支下載此分支的文件檔&lt;br&gt;
#git clone https: //github.com/XXXXXX/2016fallcp_hw.git
&lt;/p&gt;

&lt;p&gt;
我個人會先打第6點跟第7點先設定名稱與E-mail因為後面常常忘記&lt;br&gt;
#git config --global user.name "xxxxxx"&lt;br&gt;
#git config --global user.email "xxxxxx@xxxx.xxx.xx"&lt;br&gt;
#git config --list 中的user可查看目前綁定是誰
&lt;p&gt;
&lt;p&gt;
查看目前的分支是哪個&lt;br&gt;
#git branch&lt;br&gt;
#git checkout xxx 選擇分支，當然分支如果是對的就不用打這指令&lt;br&gt;
#通常在網頁的Settings→Branches 可綁定此倉儲的分支，這樣一來 可以跳過檢查分支這動作。
&lt;/p&gt;
&lt;p&gt;
#修改文件
&lt;/p&gt;
&lt;p&gt;
文件修改完成後要提交前可打指令&lt;br&gt;
#git status  可以確認修改了哪些項目
&lt;/p&gt;
&lt;p&gt;
確認修改所有&lt;br&gt;
#git add -A  (A一定要大寫)
&lt;/p&gt;
&lt;p&gt;
當打出git add -A指令後是不會顯示東西的，如果有顯示warning .....表示你必需打以下指令&lt;br&gt;
#git rm -f -r plugin/liquid_tags/test_data  (老師教的)&lt;br&gt;
#此動作打出去後要再次重git add 開始往下打指令
&lt;/p&gt;
&lt;p&gt;
再來要推回遠端之前要給一個名稱(隨便打也可以)&lt;br&gt;
#git commit -m "XXXXX" (此動作一定要記得不然會失敗)
&lt;/p&gt;
&lt;p&gt;
推回&lt;br&gt;
#git push 通常後面打origin即可，也可以直接貼上原文件網址+gh-pages
&lt;/p&gt;
&lt;p&gt;
##之後會叫你輸入github的帳號與密碼跑完後即可完成推送
&lt;/p&gt;</summary><category term="Brython"></category></entry><entry><title>W17 會轉動的線</title><link href="./w17-hui-zhuan-dong-de-xian.html" rel="alternate"></link><published>2017-01-06T14:00:00+08:00</published><updated>2017-01-06T14:00:00+08:00</updated><author><name>hou</name></author><id>tag:,2017-01-06:./w17-hui-zhuan-dong-de-xian.html</id><summary type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下可以執行  Brython 程式 --&gt;

&lt;canvas id="onebar" width="400" height="400"&gt;&lt;/canvas&gt;

&lt;script type="text/python3"&gt;
from browser import document
from browser import window
from browser import timer
import math
canvas = document["onebar"]
ctx = canvas.getContext("2d")

# 取畫布的寬與高度
width = canvas.width
height = canvas.height

# 畫圓函式
def circle(x,y,r):
    ctx.beginPath()
    ctx.arc(x, y, r, 0, math.pi*2, True)
    ctx.fill()
    ctx.closePath()

def line(x1, y1, x2, y2):
    # 以下可以利用 ctx 物件進行畫圖
    # 先畫一條直線
    ctx.beginPath()
    # 設定線的寬度為 1 個單位
    ctx.lineWidth = 1
    # 將畫筆移動到 (x1, y1) 座標點
    ctx.moveTo(x1, y1)
    # 然後畫直線到 (x2, y2) 座標點
    ctx.lineTo(x2, y2)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    # 實際執行畫線
    ctx.stroke()
    ctx.closePath()

line(200, 200, 200, 300)
circle(200, 200, 5)

x1 = 200
y1 = 200
r = 100
deg = math.pi/180

theta = 0

# 每隔特定時間, 進行動畫繪製
def animate():
    global theta
    # 刷新畫布
    ctx.clearRect(0, 0, width, height)
    # 逐一重新繪製直線與圓心球
    x2 = x1 +  r*math.cos(theta*deg)
    y2 = y1 +  r*math.sin(theta*deg)
    line(x1, y1, x2, y2)
    # 再加一條小線段
    x3 = x2 + 50*math.cos(10*theta*deg)
    y3 = y2 + 50*math.sin(10*theta*deg)
    line(x2, y2, x3, y3)
    circle(x1, y1, 5)
    theta += 1

timer.set_interval(animate, 50)
&lt;/script&gt;

&lt;h2&gt;程式資料:&lt;/h2&gt;
&lt;p&gt;&lt;pre class="brush: python"&gt;
&lt;canvas id="onebar" width="400" height="400"&gt;&lt;/canvas&gt;&lt;/p&gt;
&lt;script type="text/python3"&gt;
from browser import document
from browser import window
from browser import timer
import math
canvas = document["onebar"]
ctx = canvas.getContext("2d")

# 取畫布的寬與高度
width = canvas.width
height = canvas.height

# 畫圓函式
def circle(x,y,r):
    ctx.beginPath()
    ctx.arc(x, y, r, 0, math.pi*2, True)
    ctx.fill()
    ctx.closePath()

def line(x1, y1, x2, y2):
    # 以下可以利用 ctx 物件進行畫圖
    # 先畫一條直線
    ctx.beginPath()
    # 設定線的寬度為 1 個單位
    ctx.lineWidth = 1
    # 將畫筆移動到 (x1, y1) 座標點
    ctx.moveTo(x1, y1)
    # 然後畫直線到 (x2, y2) 座標點
    ctx.lineTo(x2, y2)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    # 實際執行畫線
    ctx.stroke()
    ctx.closePath()

line(200, 200, 200, 300)
circle(200, 200, 5)

x1 = 200
y1 = 200
r = 100
deg = math.pi/180

theta = 0

# 每隔特定時間, 進行動畫繪製
def animate():
    global theta
    # 刷新畫布
    ctx.clearRect(0, 0, width, height)
    # 逐一重新繪製直線與圓心球
    x2 = x1 +  r*math.cos(theta*deg)
    y2 = y1 +  r*math.sin(theta*deg)
    line(x1, y1, x2, y2)
    # 再加一條小線段
    x3 = x2 + 50*math.cos(10*theta*deg)
    y3 = y2 + 50*math.sin(10*theta*deg)
    line(x2, y2, x3, y3)
    circle(x1, y1, 5)
    theta += 1

timer.set_interval(animate, 50)
&lt;/script&gt;

&lt;/pre&gt;</summary><category term="Brython"></category></entry><entry><title>W16 新年快樂_樂透彩選號</title><link href="./w16-xin-nian-kuai-le-_le-tou-cai-xuan-hao.html" rel="alternate"></link><published>2016-12-29T14:00:00+08:00</published><updated>2016-12-29T14:00:00+08:00</updated><author><name>hou</name></author><id>tag:,2016-12-29:./w16-xin-nian-kuai-le-_le-tou-cai-xuan-hao.html</id><summary type="html">&lt;p&gt;Game&lt;/p&gt;


&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下可以執行  Brython 程式 --&gt;

&lt;div id="newyear"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document
from browser import html
import random
print_location = document["newyear"]

def lottery(e):
    num_list = random.sample(list(range(1, 50)), 6)
    for i in range(6):
        print_location &lt;= num_list[i] + html.BR()
    print_location &lt;= "祝您中獎!" + html.BR()

document["but2"].bind("click", lottery)
&lt;/script&gt;

&lt;p&gt;&lt;button id="but2"&gt;樂透彩自動選號&lt;/button&gt;&lt;/p&gt;

&lt;h2&gt;程式資料:&lt;/h2&gt;
&lt;p&gt;&lt;pre class="brush: python"&gt;
&lt;div id="newyear"&gt;&lt;/div&gt;
&lt;script type="text/python3"&gt;
from browser import document
from browser import html
import random
print_location = document["newyear"]&lt;/p&gt;
&lt;p&gt;def lottery(e):
    num_list = random.sample(list(range(1, 50)), 6)
    for i in range(6):
        print_location &amp;lt;= num_list[i] + html.BR()
    print_location &amp;lt;= "祝您中獎!" + html.BR()&lt;/p&gt;
&lt;p&gt;document["but2"].bind("click", lottery)
&lt;/script&gt;&lt;/p&gt;
&lt;p&gt;&lt;button id="but2"&gt;樂透彩自動選號&lt;/button&gt;&lt;/p&gt;

&lt;/pre&gt;</summary><category term="Brython"></category></entry><entry><title>W14.15 上課範例</title><link href="./w1415-shang-ke-fan-li.html" rel="alternate"></link><published>2016-12-16T14:00:00+08:00</published><updated>2016-12-16T14:00:00+08:00</updated><author><name>hou</name></author><id>tag:,2016-12-16:./w1415-shang-ke-fan-li.html</id><summary type="html">&lt;p&gt;創造按鈕&lt;/p&gt;


&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- ch01 基本的列印與輸入函式 --&gt;

&lt;script type="text/python3"&gt;
from browser import document
from browser import alert

def get_input(ev):
    the_input= input("請輸入")
    alert("輸入為:"+str(the_input))

document['ch01'].bind('click',get_input)
&lt;/script&gt;

&lt;p&gt;&lt;button id="ch01"&gt;s40523120&lt;/button&gt;&lt;/p&gt;
&lt;div id="con"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as do
from browser import html
c = do["con"]
def compa(e):
    your_input = input("請輸入一個整數!")
    # 如何判斷所輸入的整數比 10 大
    try:
        if int(your_input) &gt; 10:
            c &lt;= "所輸入的整數:" + your_input + "比 10 大" + html.BR()
        else:
            c &lt;= "所輸入的整數:" + your_input + "比 10 小" + html.BR()
    except:
        c &lt;= "所輸入的整數:" + html.BR()

#print("test")
'''
for i in range(5):
    c &lt;= "test" + html.BR()
'''
do["b1"].bind("click", compa)
&lt;/script&gt;

&lt;p&gt;&lt;button id="b1"&gt;compa&lt;/button&gt;&lt;/p&gt;
&lt;h2&gt;程式資料&lt;/h2&gt;
&lt;pre class="brush: python"&gt;

&lt;div id="con"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as do
from browser import html
c = do["con"]
def compa(e):
    your_input = input("請輸入一個整數!")
    # 如何判斷所輸入的整數比 10 大

    if int(your_input) &gt; 10:
        c &lt;= "所輸入的整數:" + your_input + "比 10 大" + html.BR()
    else:
        c &lt;= "所輸入的整數:" + your_input + "比 10 小" + html.BR()

#print("test")
'''
for i in range(5):
    c &lt;= "test" + html.BR()
'''
do["b1"].bind("click", compa)
&lt;/script&gt;

&lt;p&gt;&lt;button id="b1"&gt;compa&lt;/button&gt;
&lt;/pre&gt;&lt;/p&gt;</summary><category term="Brython"></category></entry><entry><title>W13 Brython練習</title><link href="./w13-brythonlian-xi.html" rel="alternate"></link><published>2016-12-09T14:10:00+08:00</published><updated>2016-12-09T14:10:00+08:00</updated><author><name>hou</name></author><id>tag:,2016-12-09:./w13-brythonlian-xi.html</id><summary type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;p&gt;將 &lt;a href="https://mde.tw/2016fallcp/course/Python3Programs.txt"&gt;https://mde.tw/2016fallcp/course/Python3Programs.txt &lt;/a&gt;整理成 brython &lt;/p&gt;
&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 執行按鈕 --&gt;

&lt;div id="container"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import html
container = doc['container']
mystring = ""
num = input("請輸入重複執行次數:")
#for i in range(1, 11):
for i in range(1, int(num)+1):
    mystring += str(i) + "你重複那麼多次，想幹嘛? " + html.BR()
container &lt;= mystring
&lt;/script&gt;

&lt;h2&gt;溫度轉換(攝氏轉華氏)&lt;/h2&gt;
&lt;div id="temperature"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import html
container = doc['temperature']
mystring = ""
cdegree = input("請輸入攝氏溫度:")
fdegree = float(cdegree)*9/5 + 32
output_string = "攝氏 " + str(cdegree) + "度=華氏 " + str(fdegree) + "度"
container &lt;= output_string
&lt;/script&gt;

&lt;h2&gt;程式資料&lt;/h2&gt;
&lt;p&gt;&lt;pre class="brush: python"&gt;
&lt;div id="container"&gt;&lt;/div&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import html
container = doc['container']
mystring = ""
num = input("請輸入重複執行次數:")&lt;/p&gt;
&lt;h1&gt;for i in range(1, 11):&lt;/h1&gt;
&lt;p&gt;for i in range(1, int(num)+1):
    mystring += str(i) + "你重複那麼多次，想幹嘛? " + html.BR()
container &amp;lt;= mystring
&lt;/script&gt;&lt;/p&gt;
&lt;h2&gt;溫度轉換(攝氏轉華氏)&lt;/h2&gt;
&lt;div id="temperature"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import html
container = doc['temperature']
mystring = ""
cdegree = input("請輸入攝氏溫度:")
fdegree = float(cdegree)*9/5 + 32
output_string = "攝氏 " + str(cdegree) + "度=華氏 " + str(fdegree) + "度"
container &lt;= output_string
&lt;/script&gt;

&lt;/pre&gt;</summary><category term="W13"></category></entry><entry><title>W12 Brython 吉他和弦範例</title><link href="./w12-brython-ji-ta-he-xian-fan-li.html" rel="alternate"></link><published>2016-12-02T15:00:00+08:00</published><updated>2016-12-02T15:00:00+08:00</updated><author><name>hou</name></author><id>tag:,2016-12-02:./w12-brython-ji-ta-he-xian-fan-li.html</id><summary type="html">&lt;p&gt;Brython 繪圖和弦&lt;/p&gt;


&lt;p&gt;繪圖流程, 導入程式庫, 啟動, 然後引用各種模組開始繪圖.&lt;/p&gt;
&lt;p&gt;以下利用函式定義進行和弦底稿繪圖:&lt;/p&gt;
&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 畫圖 --&gt;

&lt;canvas id="chord1" width="600" height="400"&gt;&lt;/canvas&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# 準備繪圖畫布
canvas = doc["chord1"]
ctx = canvas.getContext("2d")

def background(x, y, xinc, yinc, xnum, ynum, ctx):
    # 水平線
    for i in range(ynum+1):
        ctx.beginPath()
    # 設定線的寬度為 1 個單位
        if i == 0:
            ctx.lineWidth = 7
        else:
            ctx.lineWidth = 1
        ctx.moveTo(x-1, y+i*yinc)
        ctx.lineTo(x+xnum*xinc+1, y+i*yinc)
        # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
        ctx.strokeStyle = "blue"
        ctx.stroke()
        ctx.closePath()

    # 垂直線
    for i in range(xnum+1):
        ctx.beginPath()
    # 設定線的寬度為 1 個單位
        ctx.lineWidth = 1
        ctx.moveTo(x+i*xinc, y)
        ctx.lineTo(x+i*xinc, y+ynum*yinc)
        # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
        ctx.strokeStyle = "blue"
        ctx.stroke()
        ctx.closePath()

def canvasText(x, y, fontSize, string, sup, sub, color, ctx):
    # 標定各弦音符號, 以及把位編號
    ctx.beginPath()
    ctx.fillStyle = color
    ctx.strokeStyle = color
    #ctx.font = "20px Arial"
    ctx.font = str(fontSize)+ "px Arial"
    ctx.fillText(string, x, y)
    ctx.font = str(fontSize-8)+ "px Arial"
    if sup != "":
        ctx.fillText(sup, x+fontSize/1.6, y-fontSize/2)
    if sub != "":
        ctx.fillText(sup, x+fontSize/1.6, y)
    ctx.fill()
    ctx.stroke()
    ctx.closePath()

w = 20
h = 30
background(100, 100, w, h, 5, 5, ctx)
mylist = ["E","A","D","G","B","E"]
num = 0
for s in mylist:
    #canvasText(100,  80, 20, "A", "b", "", "black", ctx)
    canvasText(100+num*w,  80, 20, s, "", "", "black", ctx)
    num = num + 1

&lt;/script&gt;

&lt;h2&gt;程式資料:&lt;/h2&gt;
&lt;p&gt;&lt;pre class="brush: python"&gt;
&lt;canvas id="chord1" width="600" height="400"&gt;&lt;/canvas&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import math&lt;/p&gt;
&lt;h1&gt;準備繪圖畫布&lt;/h1&gt;
&lt;p&gt;canvas = doc["chord1"]
ctx = canvas.getContext("2d")&lt;/p&gt;
&lt;p&gt;def background(x, y, xinc, yinc, xnum, ynum, ctx):
    # 水平線
    for i in range(ynum+1):
        ctx.beginPath()
    # 設定線的寬度為 1 個單位
        if i == 0:
            ctx.lineWidth = 7
        else:
            ctx.lineWidth = 1
        ctx.moveTo(x-1, y+i&lt;em&gt;yinc)
        ctx.lineTo(x+xnum&lt;/em&gt;xinc+1, y+i*yinc)
        # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
        ctx.strokeStyle = "blue"
        ctx.stroke()
        ctx.closePath()&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 垂直線
for i in range(xnum+1):
    ctx.beginPath()
# 設定線的寬度為 1 個單位
    ctx.lineWidth = 1
    ctx.moveTo(x+i*xinc, y)
    ctx.lineTo(x+i*xinc, y+ynum*yinc)
    # 設定顏色為藍色, 也可以使用 &amp;quot;rgb(0, 0, 255)&amp;quot; 字串設定顏色值
    ctx.strokeStyle = &amp;quot;blue&amp;quot;
    ctx.stroke()
    ctx.closePath()
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;def canvasText(x, y, fontSize, string, sup, sub, color, ctx):
    # 標定各弦音符號, 以及把位編號
    ctx.beginPath()
    ctx.fillStyle = color
    ctx.strokeStyle = color
    #ctx.font = "20px Arial"
    ctx.font = str(fontSize)+ "px Arial"
    ctx.fillText(string, x, y)
    ctx.font = str(fontSize-8)+ "px Arial"
    if sup != "":
        ctx.fillText(sup, x+fontSize/1.6, y-fontSize/2)
    if sub != "":
        ctx.fillText(sup, x+fontSize/1.6, y)
    ctx.fill()
    ctx.stroke()
    ctx.closePath()&lt;/p&gt;
&lt;p&gt;w = 20
h = 30
background(100, 100, w, h, 5, 5, ctx)
mylist = ["E","A","D","G","B","E"]
num = 0
for s in mylist:
    #canvasText(100,  80, 20, "A", "b", "", "black", ctx)
    canvasText(100+num*w,  80, 20, s, "", "", "black", ctx)
    num = num + 1&lt;/p&gt;
&lt;/script&gt;

&lt;/pre&gt;</summary><category term="Brython"></category></entry><entry><title>W10 Brython 繪圖範例</title><link href="./w10-brython-hui-tu-fan-li.html" rel="alternate"></link><published>2016-11-18T15:50:00+08:00</published><updated>2016-11-18T15:50:00+08:00</updated><author><name>hou</name></author><id>tag:,2016-11-18:./w10-brython-hui-tu-fan-li.html</id><summary type="html">&lt;p&gt;Brython 繪圖&lt;/p&gt;


&lt;p&gt;繪圖流程, 導入程式庫, 啟動, 然後引用各種模組開始繪圖&lt;/p&gt;

&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 畫兩條直線 --&gt;

&lt;canvas id="japanflag1" width="600" height="200"&gt;&lt;/canvas&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# 準備繪圖畫布
canvas = doc["japanflag1"]
ctx = canvas.getContext("2d")

# 以下可以利用 ctx 物件進行畫圖
# 先畫一條直線
ctx.beginPath()
# 設定線的寬度為 1 個單位
ctx.lineWidth = 1

inc = 5
for i in range(100):
    ctx.moveTo(100+i*inc, 100)
    ctx.lineTo(100+i*inc, 200)

# 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
ctx.strokeStyle = "blue"
ctx.stroke()
ctx.closePath()
&lt;/script&gt;

&lt;pre class="brush: python"&gt;
&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 畫兩條直線 --&gt;

&lt;canvas id="japanflag1" width="600" height="200"&gt;&lt;/canvas&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# 準備繪圖畫布
canvas = doc["japanflag1"]
ctx = canvas.getContext("2d")

# 以下可以利用 ctx 物件進行畫圖
# 先畫一條直線
ctx.beginPath()
# 設定線的寬度為 1 個單位
ctx.lineWidth = 1

inc = 5
for i in range(100):
    ctx.moveTo(100+i*inc, 100)
    ctx.lineTo(100+i*inc, 200)

# 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
ctx.strokeStyle = "blue"
ctx.stroke()
ctx.closePath()
&lt;/script&gt;

&lt;/pre&gt;</summary><category term="Brython"></category></entry></feed>